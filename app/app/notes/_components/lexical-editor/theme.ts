import type {EditorThemeClasses} from 'lexical';

import './theme.css';

const theme: EditorThemeClasses = {
  autocomplete: 'knoat__autocomplete',
  blockCursor: 'knoat__blockCursor',
  characterLimit: 'knoat__characterLimit',
  code: 'knoat__code',
  codeHighlight: {
    atrule: 'knoat__tokenAttr',
    attr: 'knoat__tokenAttr',
    boolean: 'knoat__tokenProperty',
    builtin: 'knoat__tokenSelector',
    cdata: 'knoat__tokenComment',
    char: 'knoat__tokenSelector',
    class: 'knoat__tokenFunction',
    'class-name': 'knoat__tokenFunction',
    comment: 'knoat__tokenComment',
    constant: 'knoat__tokenProperty',
    deleted: 'knoat__tokenProperty',
    doctype: 'knoat__tokenComment',
    entity: 'knoat__tokenOperator',
    function: 'knoat__tokenFunction',
    important: 'knoat__tokenVariable',
    inserted: 'knoat__tokenSelector',
    keyword: 'knoat__tokenAttr',
    namespace: 'knoat__tokenVariable',
    number: 'knoat__tokenProperty',
    operator: 'knoat__tokenOperator',
    prolog: 'knoat__tokenComment',
    property: 'knoat__tokenProperty',
    punctuation: 'knoat__tokenPunctuation',
    regex: 'knoat__tokenVariable',
    selector: 'knoat__tokenSelector',
    string: 'knoat__tokenSelector',
    symbol: 'knoat__tokenProperty',
    tag: 'knoat__tokenProperty',
    url: 'knoat__tokenOperator',
    variable: 'knoat__tokenVariable',
  },
  embedBlock: {
    base: 'knoat__embedBlock',
    focus: 'knoat__embedBlockFocus',
  },
  hashtag: 'knoat__hashtag',
  heading: {
    h1: 'knoat__h1',
    h2: 'knoat__h2',
    h3: 'knoat__h3',
    h4: 'knoat__h4',
    h5: 'knoat__h5',
    h6: 'knoat__h6',
  },
  hr: 'knoat__hr',
  image: 'editor-image',
  indent: 'knoat__indent',
  inlineImage: 'inline-editor-image',
  layoutContainer: 'knoat__layoutContainer',
  layoutItem: 'knoat__layoutItem',
  link: 'knoat__link',
  list: {
    checklist: 'knoat__checklist',
    listitem: 'knoat__listItem',
    listitemChecked: 'knoat__listItemChecked',
    listitemUnchecked: 'knoat__listItemUnchecked',
    nested: {
      listitem: 'knoat__nestedListItem',
    },
    olDepth: [
      'knoat__ol1',
      'knoat__ol2',
      'knoat__ol3',
      'knoat__ol4',
      'knoat__ol5',
    ],
    ul: 'knoat__ul',
  },
  ltr: 'knoat__ltr',
  mark: 'knoat__mark',
  markOverlap: 'knoat__markOverlap',
  paragraph: 'knoat__paragraph',
  quote: 'knoat__quote',
  rtl: 'knoat__rtl',
  specialText: 'knoat__specialText',
  tab: 'knoat__tabNode',
  table: 'knoat__table',
  tableCell: 'knoat__tableCell',
  tableCellActionButton: 'knoat__tableCellActionButton',
  tableCellActionButtonContainer:
    'knoat__tableCellActionButtonContainer',
  tableCellHeader: 'knoat__tableCellHeader',
  tableCellResizer: 'knoat__tableCellResizer',
  tableCellSelected: 'knoat__tableCellSelected',
  tableRowStriping: 'knoat__tableRowStriping',
  tableScrollableWrapper: 'knoat__tableScrollableWrapper',
  tableSelected: 'knoat__tableSelected',
  tableSelection: 'knoat__tableSelection',
  text: {
    bold: 'knoat__textBold',
    capitalize: 'knoat__textCapitalize',
    code: 'knoat__textCode',
    italic: 'knoat__textItalic',
    lowercase: 'knoat__textLowercase',
    strikethrough: 'knoat__textStrikethrough',
    subscript: 'knoat__textSubscript',
    superscript: 'knoat__textSuperscript',
    underline: 'knoat__textUnderline',
    underlineStrikethrough: 'knoat__textUnderlineStrikethrough',
    uppercase: 'knoat__textUppercase',
  },
};

export default theme;